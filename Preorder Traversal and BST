//c++
//M-2 by stack 
//struggling to understadntig 
class Solution {
  public:
    int canRepresentBST(int arr[], int N) {
        // code here
        stack<int>lower,upper;
        lower.push(INT_MIN);
        upper.push(INT_MAX);
        int left, right;
        
        
        for(int i=0;i<N;i++)
        {
            //1
            if(arr[i]<lower.top()) //range se bhar hai, aur lower se bi chota h
            return 0; 
            //2
            while(arr[i]>upper.top())
            {
                upper.pop();
                lower.pop();
            }
            //3
            left = lower.top();
            right = upper.top();
            lower.pop();
            upper.pop();
            
            //Right side
            lower.push(arr[i]);
            upper.push(right);
            //Left side
            lower.push(left);
            upper.push(arr[i]);
            
            
            
        }
        return 1;
    }
};
M-2(by recurssion) 
class Solution {
  public:
    void BST(int arr[], int &index, int lower,int upper, int N)
    {
        if(index==N ||arr[index]<lower || arr[index]>upper)
        return;
        
        int value = arr[index++];
        //left
        BST(arr,index,lower,value,N);
        //right
        BST(arr,index,upper,value,N);
    }
  
    int canRepresentBST(int arr[], int N) {
        // code here
        int index = 0;
        BST(arr,index,INT_MIN,INT_MAX,N);
        
        return index==N;
        
    }
}

[both have O(n) tc & sc]
